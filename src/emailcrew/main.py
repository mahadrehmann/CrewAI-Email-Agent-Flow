#!/usr/bin/env python
import sys
import warnings

from datetime import datetime

from emailcrew.crew import Emailcrew
from send_outlook_email import *

warnings.filterwarnings("ignore", category=SyntaxWarning, module="pysbd")

# This main file is intended to be a way for you to run your
# crew locally, so refrain from adding unnecessary logic into this file.
# Replace with inputs you want to test with, it will automatically
# interpolate any tasks and agents information


def run():
    """
    Run the crew.
    """
    syntax = {
            "message": {
                "subject": "Subject Goes Here",
                "body": {
                    "contentType": "Text",
                    "content": "all the content of the mail"
                },
                "toRecipients": [
                    {
                        "emailAddress": {
                            "address": "i220792@nu.edu.pk"
                        }
                    }
                ]
            },
            "saveToSentItems": "true"
        }

    inputs = {
        'topic': 'done implementing the crewai email sender', # add signature
        'my_name': 'Mahad Rehman',
        'my_signature': 'Computer Science Department\nFAST NUCES Islamabad',
        'recipient_name': 'Sir Faizan the Great',
        'colleague_name': 'Sherlock Holmes' ,
        'colleague_number' : '+92 123456789',
        'current_date': str(datetime.now()),
        'application' : 'outlook',      #can be anything
        'syntax' : syntax,

        # 'information' : 'cook name and stuff'              #can i stop and ask the user for it?
    }
    
    try:
        final_answer = Emailcrew().crew().kickoff(inputs=inputs)
        # final_answer = "Emailcrew().crew().kickoff(inputs=inputs)"
        print("\nFinal Answer:\n")
        print(final_answer, type(final_answer))

        import re, ast

        # 1. Get the raw repr
        raw = str(final_answer)

        # 2. Strip any markdown fences like ```json â€¦ ```
        #    This regex pulls out the {...} block
        m = re.search(r"\{(?:.|\s)*\}", raw)
        if not m:
            raise ValueError("No dict literal found in CrewOutput")

        dict_str = m.group(0)

        # 3. Safely evaluate the Python literal into a dict
        email_payload = ast.literal_eval(dict_str)
        print("Final JSON is", email_payload)

        send_mail(email_payload)

    except Exception as e:
        raise Exception(f"An error occurred while running the crew: {e}")


'''
output:


Running the Crew
â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Crew Execution Started â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
â”‚                                                                                                                                                       â”‚
â”‚  Crew Execution Started                                                                                                                               â”‚
â”‚  Name: crew                                                                                                                                           â”‚
â”‚  ID: 8309e786-eced-4354-860f-51b900e27052                                                                                                             â”‚
â”‚  Tool Args:                                                                                                                                           â”‚
â”‚                                                                                                                                                       â”‚
â”‚                                                                                                                                                       â”‚
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

ðŸš€ Crew: crew
â”œâ”€â”€ ðŸ“‹ Task: d13c2736-910a-4557-b19a-9257ead9b08b
â”‚   Status: Executing Task...
â””â”€â”€ âœ… Knowledge Retrieval Completed
â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ðŸ“š Retrieved Knowledge â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
â”‚                                                                                                                                                       â”‚
â”‚  Additional Information: Today I studied CrewAi, in which i looked at these:                                                                          â”‚
â”‚                                                                                                                                                       â”‚
â”‚  crewAI is built on top of LangChain with a modular design principle in mind. Its main components consist of agents, tools, tasks, processes and      â”‚
â”‚  crews.                                                                                                                                               â”‚
â”‚                                                                                                                                                       â”‚
â”‚  crewAI facilitates agent collaboration by allowing users to assemble agents into teams, or crews that work to execute a common goal or task.         â”‚
â”‚                                                                                                                                                       â”‚
â”‚  crewAI offers autonomous behavior through its hierarchical process that uses an autonomously generated manager agent                                 â”‚
â”‚                                                                                                                                                       â”‚
â”‚  Agent at...                                                                                                                                          â”‚
â”‚                                                                                                                                                       â”‚
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ ðŸ¤– Agent Started â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
â”‚                                                                                                                                                       â”‚
â”‚  Agent: Write an email for Daily Report about the documentation                                                                                       â”‚
â”‚                                                                                                                                                       â”‚
â”‚  Task: Write an email about Daily Report about the documentation.  Make sure to write it in a well structured manner, the date is 2025-07-02          â”‚
â”‚  20:09:58.520199, My name is Mahad Rehman, recipient's name is Sir Faizan the Great. Use these if applicable: Colleague Name: Sherlock, colleague's   â”‚
â”‚  phone number: 1122 2211.                                                                                                                             â”‚
â”‚                                                                                                                                                       â”‚
â”‚                                                                                                                                                       â”‚
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

ðŸš€ Crew: crew
â”œâ”€â”€ ðŸ“‹ Task: d13c2736-910a-4557-b19a-9257ead9b08b
â”‚   Status: Executing Task...
â””â”€â”€ âœ… Knowledge Retrieval Completed
â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ âœ… Agent Final Answer â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
â”‚                                                                                                                                                       â”‚
â”‚  Agent: Write an email for Daily Report about the documentation                                                                                       â”‚
â”‚                                                                                                                                                       â”‚
â”‚  Final Answer:                                                                                                                                        â”‚
â”‚  Subject: Daily Documentation Report - July 2, 2025                                                                                                   â”‚
â”‚                                                                                                                                                       â”‚
â”‚  Dear Sir Faizan the Great,                                                                                                                           â”‚
â”‚                                                                                                                                                       â”‚
â”‚  This email provides a daily report on my documentation efforts for July 2, 2025.                                                                     â”‚
â”‚                                                                                                                                                       â”‚
â”‚  Today's focus was on researching and documenting the CrewAI framework.  CrewAI is built upon LangChain and employs a modular design centered around  â”‚
â”‚  agents, tools, tasks, processes, and crews.  Key findings are summarized below:                                                                      â”‚
â”‚                                                                                                                                                       â”‚
â”‚  **Core Components:**                                                                                                                                 â”‚
â”‚                                                                                                                                                       â”‚
â”‚  * **Agents:**  Defined by attributes like role, goal, and backstory.  These attributes dictate the agent's behavior and purpose within the system.   â”‚
â”‚  An example instantiation is:                                                                                                                         â”‚
â”‚                                                                                                                                                       â”‚
â”‚  ```python                                                                                                                                            â”‚
â”‚  agent = Agent(                                                                                                                                       â”‚
â”‚       role= 'Customer Support',                                                                                                                       â”‚
â”‚       goal= 'Handles customer inqueries and problems',                                                                                                â”‚
â”‚       backstory= 'You are a customer support specialist for a chain restaurant. You are responsible for handling customer calls and providing         â”‚
â”‚       customer support and inputting feedback data.'                                                                                                  â”‚
â”‚       )                                                                                                                                               â”‚
â”‚  ```                                                                                                                                                  â”‚
â”‚                                                                                                                                                       â”‚
â”‚  * **Tools:** CrewAI offers a toolkit of search tools using the Retrieval-Augmented Generation (RAG) methodology.  Examples include                   â”‚
â”‚  `JSONSearchTool`, `GithubSearchTool`, and `YouTubeChannelSearchTool`.                                                                                â”‚
â”‚                                                                                                                                                       â”‚
â”‚  * **Tasks:** Define specific actions for agents.  An example:                                                                                        â”‚
â”‚                                                                                                                                                       â”‚
â”‚  ```python                                                                                                                                            â”‚
â”‚  data_collection = Task(                                                                                                                              â”‚
â”‚       description= "Gather data from customer interactions, transaction history, and support tickets"                                                 â”‚
â”‚       expected_output= "An organized collection of data that can be preprocessed",                                                                    â”‚
â”‚       agent=data_science_agent,                                                                                                                       â”‚
â”‚                                                                                                                                                       â”‚
â”‚  )                                                                                                                                                    â”‚
â”‚  ```                                                                                                                                                  â”‚
â”‚                                                                                                                                                       â”‚
â”‚  * **Crews:** Allow for collaborative agent work.  Agents are assembled into crews to achieve common goals. An example:                               â”‚
â”‚                                                                                                                                                       â”‚
â”‚  ```python                                                                                                                                            â”‚
â”‚  my_crew = Crew(                                                                                                                                      â”‚
â”‚      agents=[data_science_agent, customer_support_agent],                                                                                             â”‚
â”‚      tasks=[customer_support_task, data_collection_task],                                                                                             â”‚
â”‚      process=Process.sequential,                                                                                                                      â”‚
â”‚      full_output=True,                                                                                                                                â”‚
â”‚      verbose=True,                                                                                                                                    â”‚
â”‚  )                                                                                                                                                    â”‚
â”‚  ```                                                                                                                                                  â”‚
â”‚                                                                                                                                                       â”‚
â”‚  * **Processes:**  Define the workflow (e.g., sequential, parallel) for a crew's tasks.                                                               â”‚
â”‚                                                                                                                                                       â”‚
â”‚                                                                                                                                                       â”‚
â”‚  **Next Steps:**                                                                                                                                      â”‚
â”‚                                                                                                                                                       â”‚
â”‚  Tomorrow, I plan to delve deeper into the implementation details of CrewAI's agent communication and task management mechanisms.  I will also        â”‚
â”‚  explore specific use cases and potential limitations.  If any questions arise, I can be reached at 1122 2211 (Sherlock can also assist).             â”‚
â”‚                                                                                                                                                       â”‚
â”‚                                                                                                                                                       â”‚
â”‚  Sincerely,                                                                                                                                           â”‚
â”‚                                                                                                                                                       â”‚
â”‚  Mahad Rehman                                                                                                                                         â”‚
â”‚  Computer Science Department                                                                                                                          â”‚
â”‚  FAST NUCES Islamabad                                                                                                                                 â”‚
â”‚                                                                                                                                                       â”‚
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

ðŸš€ Crew: crew
â”œâ”€â”€ ðŸ“‹ Task: d13c2736-910a-4557-b19a-9257ead9b08b
â”‚   Assigned to: Write an email for Daily Report about the documentation
â”‚
â”‚   Status: âœ… Completed
â””â”€â”€ âœ… Knowledge Retrieval Completed
â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Task Completion â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
â”‚                                                                                                                                                       â”‚
â”‚  Task Completed                                                                                                                                       â”‚
â”‚  Name: d13c2736-910a-4557-b19a-9257ead9b08b                                                                                                           â”‚
â”‚  Agent: Write an email for Daily Report about the documentation                                                                                       â”‚
â”‚                                                                                                                                                       â”‚
â”‚  Tool Args:                                                                                                                                           â”‚
â”‚                                                                                                                                                       â”‚
â”‚                                                                                                                                                       â”‚
â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯


'''


def train():
    """
    Train the crew for a given number of iterations.
    """
    inputs = {
        "topic": "AI LLMs",
        'current_date': str(datetime.now())
    }
    try:
        Emailcrew().crew().train(n_iterations=int(sys.argv[1]), filename=sys.argv[2], inputs=inputs)

    except Exception as e:
        raise Exception(f"An error occurred while training the crew: {e}")

def replay():
    """
    Replay the crew execution from a specific task.
    """
    try:
        Emailcrew().crew().replay(task_id=sys.argv[1])

    except Exception as e:
        raise Exception(f"An error occurred while replaying the crew: {e}")

def test():
    """
    Test the crew execution and returns the results.
    """
    inputs = {
        "topic": "AI LLMs",
        "current_date": str(datetime.now())
    }
    
    try:
        Emailcrew().crew().test(n_iterations=int(sys.argv[1]), eval_llm=sys.argv[2], inputs=inputs)

    except Exception as e:
        raise Exception(f"An error occurred while testing the crew: {e}")
